services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: station
    volumes:
      - postgres:/data/postgres
    ports:
      - 5433:5432
    networks:
      - my-network
    restart: unless-stopped
  redis:
    image: redis:latest
    command: ["redis-server"]
    ports:
      - 6379:6379
    networks:
      - my-network
    restart: unless-stopped
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - my-network
    restart: unless-stopped
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    restart: unless-stopped
    depends_on:
      - zookeeper
    networks:
      - my-network
  gateway:
    container_name: gateway
    image: gateway:latest
    ports:
      - 8080:8080
    networks:
      - my-network
    restart: unless-stopped
  charge-station-service:
    container_name: charge-station-service
    image: charge-station-service:latest
    ports:
      - 8081:8081
    networks:
      - my-network
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    restart: unless-stopped
  station-data-relay-service:
    container_name: station-data-relay-service
    image: station-data-relay-service:latest
    ports:
      - 8083:8083
    networks:
      - my-network
    restart: unless-stopped

volumes:
  postgres:
    driver: local
  redis:
    driver: local


networks:
  my-network:
    driver: bridge
